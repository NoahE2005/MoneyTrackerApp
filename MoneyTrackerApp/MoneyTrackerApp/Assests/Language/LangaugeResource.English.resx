<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnDashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="BtnMain" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="BtnOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="BtnSummary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="ButtonSubmit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="ChangeFailed" xml:space="preserve">
    <value>Configuration is already set to </value>
  </data>
  <data name="ChooseLanguage" xml:space="preserve">
    <value>Choose language</value>
  </data>
  <data name="ClearMoney" xml:space="preserve">
    <value>Clear money</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="CurrencyChanged" xml:space="preserve">
    <value>Currency changed</value>
  </data>
  <data name="GoalCloseText" xml:space="preserve">
    <value>This is how close you are to your goal</value>
  </data>
  <data name="LanguageChanged" xml:space="preserve">
    <value>Language changed</value>
  </data>
  <data name="NoChange" xml:space="preserve">
    <value>No change</value>
  </data>
  <data name="NoGoalText" xml:space="preserve">
    <value>Oops, you don't have a goal yet. Write one down</value>
  </data>
  <data name="SettingChanged" xml:space="preserve">
    <value>Please restart the application for the seting to take effect</value>
  </data>
  <data name="StartMinimized" xml:space="preserve">
    <value>Start minimized</value>
  </data>
  <data name="SummaryBad" xml:space="preserve">
    <value>Oh, what a challenging year it has been! 😔\nReflecting on the past months, it's clear that this year presented its share of financial hurdles. 💸 Despite the difficulties, acknowledging and learning from these experiences is crucial. Let's delve into the details of the financial journey over the course of {ExpenseFileCount} months, with total expenses amounting to {TotaalSum}.\n\nThroughout this period, the journey was marked by unexpected twists and turns. Each month brought its unique set of financial challenges, testing resilience and adaptability. Despite the tough times, there's value in recognizing the effort put into managing expenses and navigating through uncertainties. 🔄\n\nThe Money Tracker app, a faithful companion in this financial journey, played a vital role in providing insights and helping make informed decisions. Even in challenging times, having a tool that highlights spending patterns and areas for improvement is crucial. 📉\n\nThe total expenses, while higher than desired, tell a story of survival and determination. This is not just about numbers; it's about the lessons learned, the decisions made, and the resilience shown in the face of adversity. 💪\n\nThe app's feature to categorize expenses proved especially useful during challenging times. It allowed for a closer look at where the money was going, helping identify areas for potential savings and optimizations. 💡\n\nFinancial difficulties often come with valuable insights. Perhaps there were months when unexpected expenses took a toll, but these experiences become stepping stones for future financial strategies. The ability to learn and adapt is a testament to financial maturity. 📚\n\nWhile the overall sentiment might not be celebratory, it's essential to acknowledge the progress made in managing expenses and making informed financial decisions. As we bid farewell to this challenging year, let's carry forward the lessons learned and approach the upcoming year with renewed determination. Here's to a more financially resilient future! 🌟💪</value>
  </data>
  <data name="SummaryGood" xml:space="preserve">
    <value>Wow, what an incredible year it has been! 🎉\nI'm thrilled to share that this financial journey has been nothing short of fantastic. 🚀\nThroughout the year, diligent tracking and smart financial decisions have paved the way for a brighter financial future. 💰\n\nIn the span of {ExpenseFileCount} months, the journey has been enlightening. Each month brought its own set of challenges and triumphs, ultimately contributing to the overall financial narrative. The total expenses for the year, a sum of {TotaalSum}, tell a story of responsible spending and financial awareness. 📊\n\nAs we reflect on the past months, it's essential to acknowledge the effort put into tracking expenses meticulously. The Money Tracker app has proven to be an invaluable companion, providing insights that empower informed financial decisions. 📈\nFrom daily transactions to monthly budgets, the app has played a pivotal role in shaping a financially sound lifestyle.\n\nOne of the standout features of the app is its ability to break down expenses into categories, offering a detailed analysis of where the money is going. Whether it's entertainment, groceries, or utilities, having a comprehensive breakdown allows for a targeted approach to managing finances. 💡\n\nThe journey wasn't just about cutting expenses; it was also about identifying areas of opportunity and making strategic financial investments. Perhaps there were months with unexpected expenses, but those moments served as lessons in adaptability and resilience. 💪\n\nLooking at the bigger picture, the Money Tracker app has not only been a tool for expense tracking but also a source of motivation. Setting financial goals and seeing them gradually materialize is a testament to the power of intentional money management. 🎯\n\nIn the realm of personal finance, knowledge is indeed power. The app's ability to provide financial insights, trends, and forecasts has empowered better decision-making. It's not just about the past expenses but also about preparing for a more secure and prosperous financial future.\n\nAs we bid farewell to this remarkable year, it's worth appreciating the journey and the financial milestones achieved. The Money Tracker app has been a true ally in this pursuit of financial well-being. Here's to more financial success in the upcoming year! 🌟💸</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TypeNewHere" xml:space="preserve">
    <value>Type new here</value>
  </data>
</root>